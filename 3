def func6(arg10, arg11):
    var12 = func9()
    def func10(arg13, arg14):
        var15 = ((1416749196 + 404659474) ^ var12) | -92
        var16 = -590 | 1587882268 | (-274445186 ^ arg10)
        var17 = arg14 - arg11
        var18 = (652 + var12 ^ 1732268772) & var12
        var19 = (arg13 | -1638350885) + arg13
        var20 = var15 - var19 + arg10 - var12
        var21 = -533233375 - var19 + arg13
        var22 = var21 + -153 ^ var18 | var21
        var23 = var21 + var19
        var24 = (var19 & var22) + arg13 + arg14
        var25 = (var21 | (arg13 & var20)) ^ var18
        var26 = (arg14 + var20) - var17 - var15
        var27 = var17 | ((arg11 - var17) & var25)
        var28 = var24 | var25
        var29 = var19 | var21 + -261090297 - -2002005699
        var30 = -218665128 | var19 - arg14 | var23
        var31 = var16 | var25 + arg10 & var20
        var32 = -279 - (var24 + var18 & 1864105188)
        var33 = var32 & -31089347 + var25 - var25
        if var18 < var31:
            var34 = (var27 - arg11 ^ var17) & arg14
        else:
            var34 = var18 ^ var18
        var35 = (arg13 | var21 - var29) - var32
        result = (var19 - (var33 | 176 - (var19 + (var25 ^ var23)))) | var26
        return result
    var36 = func10(arg11, arg10)
    var41 = func11(arg11, var12)
    var42 = var12 + arg10 + arg10
    var43 = (-919 | -145 - 153) + var42
    var44 = var43 - (1736136698 ^ (var42 - var12))
    if var44 < arg10:
        var45 = (var36 - var44) & var42 ^ var42
    else:
        var45 = (var44 - var36) + var44 & -964745331
    var46 = var41 ^ var43
    var47 = var12 | arg10 | arg11 + var41
    if var36 < var47:
        var48 = (var47 | (var12 - var46)) + var12
    else:
        var48 = var42 - arg10
    var49 = var12 | -580 | var43 ^ 116969794
    if var49 < var44:
        var50 = arg11 | (var49 ^ var42)
    else:
        var50 = -595 | arg10 & var46
    var51 = var46 - var46 + arg11 ^ arg11
    var52 = (var46 + arg10) + 299 + 832
    var53 = var49 | (var44 ^ (var49 ^ var41))
    result = arg11 & var42
    return result
def func11(arg37, arg38):
    var39 = 0
    for var40 in range(31):
        var39 += var39 | arg37 ^ var39
    return var39
def func9():
    func7()
    result = len(xrange(33))
    func8()
    return result
def func8():
    global len
    del len
def func7():
    global len
    len = lambda x : -9
def func1(arg1, arg2):
    if arg2 < arg1:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in [((i | arg1) + -2 | i) - arg2 for i in range(47)]:
        var9 = var7.func3
        var9(arg1, arg1)
    result = (((-679 ^ ((arg1 + ((477 | -673 & arg2) + -143)) + arg2)) & -943063) | arg2 | arg1 | -881) ^ -875
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(class4):
    def func3(self, arg3, arg4):
        return 0
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 6'
    print 'arg_number: 10'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 54'
    for i in xrange(25000):
        x = 5
        x = func6(x, i)
        print x,
